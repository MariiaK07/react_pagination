{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","activePage","onPageChange","toNextPage","toPrevPage","pageQuantity","Math","ceil","startItemsRange","endItemsRange","pagesArr","Array","from","keys","map","num","createPage","page","className","type","classNames","hidden","onClick","disabled","App","state","setState","onPerPageChange","event","Number","target","value","this","htmlFor","name","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAeC,KAAKC,KAAKR,EAAQC,GACjCQ,EAAkBR,GAAWC,EAAa,GAAK,EAC/CQ,EAAgBJ,IAAiBJ,EAAaF,EAAQE,EAAaD,EACnEU,EAAWC,MAAMC,KAAKD,MAAMN,GAAcQ,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAM,KAEnEC,EAAa,SAACC,GAClB,OACE,oBAAIC,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAWE,IACT,0BACA,CAAE,kCAAmCH,IAAShB,IAEhDoB,OACW,IAATJ,GACGA,IAAShB,GACTgB,IAAShB,EAAa,GACtBgB,IAAShB,EAAa,GACtBgB,IAASZ,EAEdiB,QAAS,kBAAMpB,EAAae,IAb9B,SAeGA,OAMT,OACE,gCACE,uCAAQT,EAAR,cAA6BC,EAA7B,eAAiDV,KAEjD,qBAAImB,UAAU,aAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVK,SAAyB,IAAftB,EACVqB,QAASlB,EAJX,oBAUDM,EAASI,KAAI,SAAAG,GACZ,OAAIA,IAAShB,EAAa,EAEtB,qCACE,oBAAIiB,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,4DAIVG,OAAQpB,EAAa,EANvB,mBAWDe,EAAWC,MAKdA,IAAShB,EAAa,EAEtB,qCACGe,EAAWC,GACZ,oBAAIC,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,4DAIVG,OAAQpB,GAAcI,EAAe,EANvC,sBAgBNW,EAAWC,MAIf,oBAAIC,UAAU,mBAAd,SACE,wBACEC,KAAK,SACLD,UAAU,0BACVK,SAAUtB,IAAeI,EACzBiB,QAASnB,EAJX,2BCvGJqB,E,4MACJC,MAAe,CACb1B,MAAO,GACPC,QAAS,EACTiB,KAAM,G,EAGRd,WAAa,WACX,EAAKuB,UAAS,SAAAD,GAAK,MAAK,CACtBR,KAAMQ,EAAMR,KAAO,O,EAIvBb,WAAa,WACX,EAAKsB,UAAS,SAAAD,GAAK,MAAK,CACtBR,KAAMQ,EAAMR,KAAO,O,EAIvBf,aAAe,SAACe,GACd,EAAKS,SAAS,CAAET,U,EAGlBU,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZ1B,QAAS6B,OAAOD,EAAME,OAAOC,OAC7Bd,KAAM,K,4CAIV,WACE,MAAiCe,KAAKP,MAA9B1B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASiB,EAAxB,EAAwBA,KAExB,OACE,qCACE,4CACA,8BACE,wBAAOgB,QAAQ,UAAf,+BAEE,yBACEC,KAAK,UACLC,GAAG,UACHJ,MAAO/B,EACPoC,SAAUJ,KAAKL,gBAJjB,UAME,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAKN,cAAC,EAAD,CACEhC,MAAOA,EACPC,QAASA,EACTC,WAAYgB,EACZf,aAAc8B,KAAK9B,aACnBC,WAAY6B,KAAK7B,WACjBC,WAAY4B,KAAK5B,oB,GA3DTiC,IAAMC,WAkETd,ICzEfe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1173c224.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  activePage: number;\n  onPageChange: (page: number) => void;\n  toNextPage: () => void;\n  toPrevPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  activePage,\n  onPageChange,\n  toNextPage,\n  toPrevPage,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const startItemsRange = perPage * (activePage - 1) + 1;\n  const endItemsRange = pageQuantity === activePage ? total : activePage * perPage;\n  const pagesArr = Array.from(Array(pageQuantity).keys()).map(num => num + 1);\n\n  const createPage = (page: number) => {\n    return (\n      <li className=\"pagination__page\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'pagination__page-button',\n            { 'pagination__page-button--active': page === activePage },\n          )}\n          hidden={\n            page !== 1\n            && page !== activePage\n            && page !== activePage + 1\n            && page !== activePage - 1\n            && page !== pageQuantity\n          }\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </button>\n      </li>\n    );\n  };\n\n  return (\n    <nav>\n      <h3>{`${startItemsRange} - ${endItemsRange} of ${total}`}</h3>\n\n      <ul className=\"pagination\">\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === 1}\n            onClick={toPrevPage}\n          >\n            &laquo;\n          </button>\n        </li>\n\n        {pagesArr.map(page => {\n          if (page === activePage - 2) {\n            return (\n              <>\n                <li className=\"pagination__page\">\n                  <button\n                    type=\"button\"\n                    className=\"\n                      pagination__page-button\n                      pagination__page-button--spread\n                    \"\n                    hidden={activePage < 4}\n                  >\n                    ...\n                  </button>\n                </li>\n                {createPage(page)}\n              </>\n            );\n          }\n\n          if (page === activePage + 2) {\n            return (\n              <>\n                {createPage(page)}\n                <li className=\"pagination__page\">\n                  <button\n                    type=\"button\"\n                    className=\"\n                      pagination__page-button\n                      pagination__page-button--spread\n                    \"\n                    hidden={activePage >= pageQuantity - 2}\n                  >\n                    ...\n                  </button>\n                </li>\n              </>\n            );\n          }\n\n          return (\n            createPage(page)\n          );\n        })}\n\n        <li className=\"pagination__page\">\n          <button\n            type=\"button\"\n            className=\"pagination__page-button\"\n            disabled={activePage === pageQuantity}\n            onClick={toNextPage}\n          >\n            &raquo;\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\ntype State = {\n  total: number;\n  perPage: number;\n  page: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  toNextPage = () => {\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  };\n\n  toPrevPage = () => {\n    this.setState(state => ({\n      page: state.page - 1,\n    }));\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  onPerPageChange = (event: { target: { value: string } }) => {\n    this.setState({\n      perPage: Number(event.target.value),\n      page: 1,\n    });\n  };\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <div>\n          <label htmlFor=\"perPage\">\n            Items per page&nbsp;\n            <select\n              name=\"perPage\"\n              id=\"perPage\"\n              value={perPage}\n              onChange={this.onPerPageChange}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </label>\n        </div>\n\n        <Pagination\n          total={total}\n          perPage={perPage}\n          activePage={page}\n          onPageChange={this.onPageChange}\n          toNextPage={this.toNextPage}\n          toPrevPage={this.toPrevPage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}